Hàm Băm: (Hash function)
 Tổng quát: 
    Công dụng: sinh ra Hash value (giá trị băm) tương ứng với dữ liệu đầu vào 
    giá trị băm = key 
    hiệu tượng trùng key có thể xảy ra 
    mọi người chấp nhận và cố gắng phát triển để giảm thiểu hiện tượng trùng key
    bảng băm nhằm tra cứu nhanh tới các dữ liệu với key cho trước 

Các phương pháp cho string searching
String searching is to find the location of a specific text pattern within a larger body of text
Bruteforce: 
   ý tưởng: so sánh pattern( chuỗi cần tìm) với từng chữ cái trong chuỗi không trùng thì tiếp tục
   psedu-code (nháp):
      i=0=k
      do if (text [i] == pattern [i]) 
         text [i+1] == pattern [i]
         k++
      else i++
      while (k<len(pattern) or i<len(text))
   nhược điểm: (slide 5) worst case sẽ so sánh rất nhiều và tốn thời gian
   ưu : đơn giản
   cho pattern có M ký tự, text có N ký tự
      Tổng số lần so sánh: N-M+1
      thời gian xử lý worst case O(NM)
Rabin Karp:
   ý tưởng: tính Hash value của pattern để so sánh với chữ trong text. Trùng thì sử dụng Bruteforce
   mục đính dùng Bruteforce để đảm bảo đúng chuỗi cần tìm do hiện tượng trùng key

   Cách tính Hash value
   xét một chuỗi có M ký tự sẽ có M số theo hệ số b
   b là số ký tự khác nhau trong chuỗi 
   vd: "ABCDEF"   
      trong đó A=1;B=2...
      b=6
      M của CDE=3
      Hash value của CDE= 3*6^2+4*6+5*1
   Nếu M quá lớn thì kết quả trả ra rất lớn( b^M)
   Vì thế chúng ta sử dụng chia lấy dư (mod)(%) với một số nguyên tố q
   Nếu Q đủ lớn thì hiện tượng trung key sẽ hiếm khi xảy ra 
   O(N) với N là số ký tự trong text
   O(NM) có thể sẽ xảy ra khi q không đủ lớn 

Knuth-Morris-Pratt
   Đệ quy có nhớ phiên bản tìm kiếm đối với Bruteforce
   giới thiệu thôi nên ko tìm sâu đâu 
   muốn biết thì tự tìm tiếp đi tại nó difficult